#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import numpy as np
import sklearn
import seaborn as sns
import matplotlib.pyplot as plt


# In[2]:


df=pd.read_csv('/content/drive/MyDrive/IRIS.csv')
df.head()


# In[3]:


df.info()


# In[4]:


df.describe()


# In[5]:


df.shape


# In[6]:


df.isnull().sum()


# So there is no null values in dataset
# 

# In[7]:


df['species'].value_counts()


# In[8]:


df.columns


# In[9]:


sns.scatterplot(x='sepal_length', y='sepal_width', hue='species', data=df)
plt.show()


# In[10]:


plt.figure(figsize=(6,5))
sns.histplot(data=df, x='sepal_length',bins=11)


# In[11]:


plt.figure(figsize=(6,5))
sns.histplot(data=df, x='sepal_width',bins=11)


# In[12]:


plt.figure(figsize=(8,5))
# sns.set_style("whitegrid")
sns.pairplot(df)


# In[13]:


sns.FacetGrid( df ,hue="species").map(sns.distplot,"petal_length").add_legend()
sns.FacetGrid(df,hue="species").map(sns.distplot,"petal_width").add_legend()
sns.FacetGrid(df,hue="species").map(sns.distplot,"sepal_length").add_legend()
plt.show()


# In[14]:


X = df.drop(['species',"sepal_width"],axis=1)
y = df['species']


# In[15]:


X.shape


# In[16]:


y.shape


# In[17]:


from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier


# In[18]:


X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=42)


# In[19]:


model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)


# In[20]:


print(model.score(X_train,y_train))
print(model.score(X_test,y_test))


# In[21]:


y_pred=model.predict(X_test)
y_pred


# In[22]:


from sklearn.metrics import classification_report
allreport = classification_report(y_test, y_pred)


# In[23]:


print(allreport)


# In[24]:


from sklearn.metrics import accuracy_score


# In[25]:


accuracy=accuracy_score(y_test,y_pred)


# In[26]:


accuracy


# In[ ]:




